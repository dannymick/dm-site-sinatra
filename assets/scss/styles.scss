@import 'fonts';
@import 'lib';
@import 'vars';

body {
	background-color: $white;
	font-family: 'Helvetica Neue', sans-serif;
	font-weight: 200;
}

.container {
	margin: 0 auto;
	width: 100%;
	@include breakpoint(48em) {
		width: rem(1170);
	}
}

.work-index, .showcase {
	margin-top: rem(130);
}

.inner {
	margin: 0 auto;
	width: rem(585);
}

.cv {
	margin-top: $navHeight;
	z-index: 0;
	position: relative;

	@include breakpoint(48em) {
		z-index: $CV--zIndex;
	}

	&.inner {
		width: 298px;

		@include breakpoint(48em) {
			width: rem(585);
		}
	}

	h2, h3 {
		font-family: BebasNeue;
		text-rendering: optimizelegibility;
	}

	h2 {
		@include tracking(25);
	}

	h3 {
		@include tracking(50);
		a {
			// @include tracking(50);
		}
	}
}

h2 span,
.cv p {
	font-family: 'Open Sans', 'Helvetica Neue', sans-serif;
	line-height: 1.5;
	font-size: rem(16);
}

.job {
	margin-bottom: 60px;
}

.cv a:not(.work) {
	color: $black;
	position: relative;
	text-decoration: none;

	&:after {
		background-color: $black;
		bottom: 0;
		content: "";
		height: 2px;
		left: 0;
		margin-top: 2px;
		position: absolute;
		transform-origin: 0 0;
		transform: scaleX(0);
		transition: $standard_transition;
		width: 100%;
	}

	&:hover {
		&:after {
			transition: $standard_transition;
			transform: scaleX(1);
		}
	}
}

header {
	// background-color: rgba(255,255,255,.9);
	background: -moz-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(255,255,255,.9) 100%); /* FF3.6-15 */
	background: -webkit-linear-gradient(top, rgba(255,255,255,1) 0%,rgba(255,255,255,.9) 100%); /* Chrome10-25,Safari5.1-6 */
	background: linear-gradient(to bottom, rgba(255,255,255,1) 0%,rgba(255,255,255,.9) 100%); 
	border-bottom: 1px solid #000;
	clear: both;
	height: 4rem;
	position: fixed;
	left: 0;
	padding: 0 rem(10);
	right: 0;
	top: 0;
	z-index: $GLOBAL_HEADER--zIndex;
	
	h1 {
		font-family: BebasNeueBold, 'Helvetica Neue', 'sans-serif';
		float: left;
		font-size: 3.5em;
		height: 42px;
		margin-top: 10px;

		a {
			color: $black;
			text-decoration: none;
		}
	}

	nav {
		float: right;

		a {
			color: $black;
			display: inline-block;
			font-family: BebasNeueBold, 'Helvetica Neue', 'sans-serif';
			font-size: 2rem;
			position: relative;
			text-decoration: none;
			margin: rem(36) $gutter 0 0;

			&:after {
				background-color: $black;
				bottom: 0;
				content: "";
				height: 2px;
				left: 0;
				margin-top: 2px;
				position: absolute;
				transform-origin: 0 0;
				transform: scaleX(0);
				transition: $standard_transition;
				width: 100%;
			}

			&:hover {
				&:after {
					transition: $standard_transition;
					transform: scaleX(1);
				}
			}

			&:last-of-type {
				margin-right: 0;
			}
		}
	}

	@include breakpoint(48em) {
		height: $navHeight;
		padding: 0;

		h1 {
			height: 42px;
			margin-top: 26px;
		}

		a {
			margin: rem(47) $gutter 0 0;
		}
	}
}

nav, .work-index {
	margin-bottom: $gutter;
}

.work {
	// max-height: 220px;
	margin-bottom: 12px;
	width: 100%;
	margin-left: 0;

	img {
		width: 100%;
	}

	figcaption {
		display: none;
	}

	// @media screen and (max-width: 435px) {
	// 	margin-left: $gutter;
	// }

	/* @include breakpoint(23.4375em) {
		max-height: 260px;
	}

	@include breakpoint(25.6875em) {
		max-height: 304px;
	} */

	@include breakpoint(48em) {
		float: left;
		background-color: #DDD;
		width: 570px;
		height: 380px;
		overflow: hidden;
		margin-left: 0;
		margin-right: $gutter;
		position: relative;
		margin-bottom: $gutter;

		p {
			position: absolute;
			z-index: 100;
			bottom: 0;
			left: 30px;
			color: white;
			font-family: BebasNeueBold;
		}

		img {
			width: 100%;
			height: auto;
		}

		&:nth-child(even) {
			margin-right: 0;
		}
	}
}

.showcase {
	img {
		display: block;
		width: 100%;
	}

	.showcase--copy {
		padding: 0 6px;
	}

	h3 {
		font-weight: 700;
	}
}

 /* imghvr-flip-*
   ----------------------------- */
/* [class^='imghvr-flip-'], [class*=' imghvr-flip-'] {
	@include perspective(50em);
	img {
		backface-visibility: hidden;
	}
	figcaption {
		opacity: 0;
	}
	&:hover {
		> img {
			opacity: 0;
		}
		figcaption {
			opacity: 1;
			@include transition-delay($transition-duration * 0.4);
		}
	}


.imghvr-flip-diag-1 {
	figcaption {
		@include transform(rotate3d(1,-1,0,100deg));
	}
	&:hover {
		> img {
			@include transform(rotate3d(-1,1,0,100deg));
		}
		figcaption {
			@include transform(rotate3d(0,0,0,0deg));
		}
	}
} */